apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    io.kompose.service: fix-redis-volume-ownership
  name: fix-redis-volume-ownership
spec:
  progressDeadlineSeconds: 2147483647
  replicas: 1
  revisionHistoryLimit: 2147483647
  selector:
    matchLabels:
      io.kompose.service: fix-redis-volume-ownership
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.19.0 (f63a961c)
      creationTimestamp: null
      labels:
        io.kompose.service: fix-redis-volume-ownership
    spec:
      containers:
      - env:
        - name: REDIS_REPLICATION_MODE
          value: master
        - name: ALLOW_EMPTY_PASSWORD
          value: "yes"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_DISABLE_COMMANDS
        image: docker.io/bitnami/redis:latest
        imagePullPolicy: Always
        livenessProbe:
          exec:
            command:
            - redis-cli
            - ping
          failureThreshold: 5
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        name: fix-redis-volume-ownership
        ports:
        - containerPort: 6379
          name: redis
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          failureThreshold: 5
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /bitnami/redis/data
          name: fix-redis-volume-ownership-claim0
        - mountPath: /opt/bitnami/redis/conf/redis.conf
          name: fix-redis-volume-ownership-claim1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext:
        runAsUser: 0
      terminationGracePeriodSeconds: 30
      volumes:
      - name: fix-redis-volume-ownership-claim0
        persistentVolumeClaim:
          claimName: fix-redis-volume-ownership-claim0
      - name: fix-redis-volume-ownership-claim1
        persistentVolumeClaim:
          claimName: fix-redis-volume-ownership-claim1
status: {}
